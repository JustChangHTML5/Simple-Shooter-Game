var canvas = document.getElementById("canvas");
var ctx = canvas.getContext("2d");

var width = 1000;
var height = 600;

canvas.width = width;
canvas.height = height;

var bullets = [];
var shooters = [];

function getMousePos(event) {
    var rect = canvas.getBoundingClientRect();
    return {
      x: event.clientX - rect.left,
      y: event.clientY - rect.top
    }
}

document.onkeypress = function(evt) {
    var evt = evt || window.event;
    var charCode = evt.keyCode || evt.which;
    var charStr = String.fromCharCode(charCode);
    keyEvents(charStr, evt);
}

function click(event) {
    var pos = getMousePos(event);
    
}

function deleteShooter(type, shooter) {
    for (var i = 0; i < type.length; i++) {
        curShooter = type[i];
        if (curShooter == shooter) {
            type.splice(i);
        }
    }
}

function drawRect(x, y, width, height, color) {
    ctx.beginPath();
    ctx.fillStyle = color;
    ctx.fillRect(x, y, width, height);
    ctx.stroke();
}

function rotateAtPoint(x, y, angle) {
    ctx.translate(x, y);
    ctx.rotate(angle);
    ctx.translate(x * -1, y * -1);
}

class Bullet {
    constructor(posX, posY, radius, velocityX, velocityY, strength, parent, index) {
        this.pos = [posX, posY];
        this.velocity = [velocityX, velocityY];
        this.radius = radius;
        this.strength = strength;
        this.parent = parent;
        this.index = index;
    }

    move() {
        if (this.pos[0] < 0 || this.pos[0] > width || this.pos[1] < 0 || this.pos[1] > height) {
            this.parent.bullets.pop(this.index);
        }
        this.pos[0] -= this.velocity[0];
        this.pos[1] -= this.velocity[1];
    }

    checkIfHit(shooter) {
        if (this.pos[0] > (shooter.pos[0] - shooter.radius / 2) && this.pos[0] < (shooter.pos[0] + shooter.radius / 2) && this.pos[1] > (shooter.pos[1] - shooter.radius / 2) && this.pos[1] < (shooter.pos[1] + shooter.radius / 2)) {
            shooter.hp -= this.damage;
            this.parent.bullets.pop(this.index);
        }
    }

    draw() {
        ctx.beginPath();
        ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, false);
        ctx.fillStyle = "white";
        ctx.fill();
    }
}

class Shooter {
    constructor(posX, posY, radius, hp, strength, color) {
        this.pos = [posX, posY];
        this.radius = radius;
        this.hp = hp;
        this.strength = strength;
        this.direction = 0;
        this.color = color;
        this.bullets = [];
    }

    shoot(shootPosX, shootPosY, bulletRadius) {
        var shootX = Math.abs(shootPosX - this.pos[0]);
        var shootY = Math.abs(shootPosY - this.pos[1]);
        var whole = shootX + shootY;
        let bullet = new Bullet(this.pos[0], this.pos[1], bulletRadius, shootX / whole, shootY / whole, this.strength, this, this.bullets.length);
        this.bullets.push(bullet);
    }

    update() {
        if (this.hp <= 0) {
            deleteShooter(this.parent, this);
        }
    }

    draw() {
        ctx.beginPath();
        ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, false);
        ctx.fillStyle = this.color;
        ctx.fill();
    }
}

sizeX = 100;
sizeY = 100;

let player = new Shooter(canvas.width / 2, canvas.height / 2, 10, 100, 10, "blue");
let enemy = new Shooter(1, 2, 10, 100, 10, "red");
shooters.push(player);
shooters.push(enemy)

function keyEvents(event, evt) {
    switch(event) {
        case "w":
            player.pos[1] -= 3;
            break;

        case "a":
            player.pos[0] -= 3;
            break

        case "s":
            player.pos[1] += 3;
            break;

        case "d":
            player.pos[0] += 3;
            break;
    }
}

function main() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    for (var i = 0; i < shooters.length; i++) {
        shooters[i].draw();
        for (var j = 0; j < shooters[i].bullets.length; j++) {
            shooters[i].bullets[j].draw();
            shooters[i].bullets[j].move();
            for (var k = 0; k < shooters.length; k++) {
                if (shooters[k] != shooters[i]) {
                    shooters[i].bullets[j].checkIfHit(shooters[k]);
                }
            }
        }
    }
}

player.shoot(2, 1, 3);

main();

var gameLoop = setInterval(main, 10);
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































